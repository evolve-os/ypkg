actions:
    - configure: |
        ./configure %CONFOPTS%
    - reconfigure: |
        autoreconf -vfi
        %configure
    - autogen: |
        ./autogen.sh %CONFOPTS%
        %configure
    - make: |
        make %JOBS%
    - make_install: |
        %make install DESTDIR="%installroot%"
    - cmake: |
        cmake -DCMAKE_CFLAGS="%CFLAGS%" -DCMAKE_CXX_FLAGS="%CXXFLAGS%" \
        -DCMAKE_LD_FLAGS="%LDFLAGS%" -DCMAKE_LIB_SUFFIX="%LIBSUFFIX%" \
        -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=%PREFIX%
    # Example: %meson_configure ..
    - meson_configure: |
        CFLAGS="%CFLAGS%" CXXFLAGS="%CXXFLAGS%" LDFLAGS="%LDFLAGS%" meson --prefix %PREFIX% --buildtype=plain --libdir="lib%LIBSUFFIX%" --libexecdir="lib%LIBSUFFIX%/%PKGNAME%"
    - meson_build: |
        ninja %JOBS%
    - meson_install: |
        DESTDIR="%installroot%" ninja install %JOBS%
    - qmake: |
        qmake QMAKE_CFLAGS_RELEASE="%CFLAGS%" QMAKE_CXXFLAGS_RELEASE="%CXXFLAGS%" QMAKE_LFLAGS="%LDFLAGS%"
    - patch: |
        patch -t -E --no-backup-if-mismatch -f
    # Only works if the user has a series file. They can provide the name to
    # override 'series' if needed
    - apply_patches: |
        function apply_patches() {
            if [[ ! -z "$1" ]]; then
                srs="$pkgfiles/$1"
            else
                srs="$pkgfiles/series"
            fi
            test -e "$srs" || exit 1
            while read -r pname ; do
                if [[ "$pname" == "" ]]; then
                    continue
                fi
                %patch -p1 -i $pkgfiles/$pname
            done < $srs
        }
        apply_patches
    # Make life easier with Haskell
    - cabal_configure: |
        export GHCV=`readlink /usr/bin/ghc | cut -d'-' -f2`
        mkdir -p ~/.ghc/x86_64-linux-$GHCV/package.conf.d
        cp /usr/lib64/ghc-$GHCV/package.conf.d/* ~/.ghc/x86_64-linux-$GHCV/package.conf.d
        ghc-pkg recache --user
        cabal configure --prefix=%PREFIX% \
                        --libdir=%libdir% \
                        --libexecdir=%libdir%/%PKGNAME% \
                        --libsubdir="\$compiler/\$pkgid" \
                        --sysconfdir=/etc \
                        --enable-executable-dynamic \
                        --enable-shared
    - cabal_build: |
        cabal build %JOBS%
    - cabal_install: |
        cabal copy --destdir=$installdir
    - cabal_register: |
        export GHC=`readlink /usr/bin/ghc`
        export LIBNAME=`echo $package | cut -d'-' -f2-`
        cabal register --gen-pkg-config
        install -D -m 00644 $LIBNAME-$version.conf $installdir%libdir%/$GHC/package.conf.d/$LIBNAME-$version.conf
        rm $installdir%libdir%/$GHC/$LIBNAME-$version/*.a
    # Make life easier with Perl
    - perl_setup: |
        function perl_setup() {
            if [[ -e Build.PL ]]; then
                perl Build.PL installdirs=vendor create_packlist=0 $* || exit 1
            else
                perl Makefile.PL PREFIX=%PREFIX% INSTALLDIRS=vendor DESTDIR="%installroot%" $* || exit 
            fi
        }
        perl_setup
    - perl_build: |
        function perl_build() {
            if [[ -e Build.PL ]]; then
                perl Build installdirs=vendor create_packlist=0 $* || exit 1
            else
                %make $* || exit 1
            fi
        }
        perl_build
    # We need to nuke use of privlib because its always a perllocal.pod situation,
    # and these macros explicitly use vendor libs
    - perl_install: |
        function perl_install() {
            if [[ -e Build.PL ]]; then
                perl Build destdir="%installroot%" install $* || exit 1
            else
                %make_install $* || exit 1
            fi
            priv_lib="%perl_privlib%"
            if [[ -e "$installdir/$priv_lib" ]]; then
                rm -rfv "$installdir/$priv_lib"
            fi
        }
        perl_install
    - python_setup: |
        python2.7 setup.py build
    - python_install: |
        python2.7 setup.py install --root="%installroot%"
    - python3_setup: |
        python3 setup.py build
    - python3_install: |
        python3 setup.py install --root="%installroot%"
    - waf_configure: |
        ./waf configure --prefix=%PREFIX%
    - waf_build: |
        ./waf build --jobs="%YJOBS%"
    - waf_install: |
        ./waf install --jobs="%YJOBS%" --destdir="%installroot%"
defines:
    - CONFOPTS: |
        --prefix=%PREFIX% --build=%HOST% --libdir=%libdir% --mandir=/usr/share/man \
        --infodir=/usr/share/info --datadir=/usr/share --sysconfdir=/etc \
        --localstatedir=/var --libexecdir=%libdir%/%PKGNAME%
    # Inspired by the RPM guys :]
    - perl_privlib: |
        $(eval `perl -V:installprivlib`; echo $installprivlib)
